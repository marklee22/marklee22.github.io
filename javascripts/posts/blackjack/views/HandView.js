// Generated by CoffeeScript 1.6.2
(function() {
  var _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.HandView = (function(_super) {
    __extends(HandView, _super);

    function HandView() {
      _ref = HandView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    HandView.prototype.className = 'hand animated';

    HandView.prototype.template = _.template('<h2><span class="blackjack-player"><% if(isDealer){ %>Dealer<% }else{ %>You<% } %> (<span class="score"></span>)</span></h2>');

    HandView.prototype.initialize = function() {
      var _this = this;

      this.collection.on('change', function() {
        return _this.render();
      });
      this.collection.on('add', function() {
        return _this.render();
      });
      return this.render();
    };

    HandView.prototype.render = function() {
      this.$el.children().detach;
      this.$el.html(this.template(this.collection)).append(this.collection.map(function(card, index) {
        var cardView;

        cardView = new CardView({
          model: card
        });
        if (index < 2 || index < this.collection.length - 1) {
          cardView.$el.removeClass('fadeInLeft');
        } else {
          cardView.$el.addClass('fadeInLeft');
        }
        return cardView.el;
      }, this));
      return this.$('.score').text(this.collection.getScoreMessage());
    };

    return HandView;

  })(Backbone.View);

}).call(this);

/*
//@ sourceMappingURL=HandView.map
*/
